<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.itwillbs.solex.workOrder.WorkOrderMapper">
<!-- 	작업지시 조회 -->
	<select id="getWorkList" resultType="map">
		SELECT odd_id
			   , prd_id
			   , prd_code
			   , prd_nm
			   , opt_id -- 옵션 id
			   , odd_cnt
			   , odd_sts
			   , prd_color
			   , prd_size
			   , prd_height
			   , ord_end_date
			   , odd_actual_cnt
		  FROM vw_suju_summary -- 뷰테이블
		 WHERE odd_sts IN (
			 	'작업 대기',
			 	'작업중',
			 	'작업 완료',
			 '출고 대기(공장 > 창고)'
		 )
		   AND odd_isapproval = 'y'
		 ORDER BY odd_id DESC
		OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
	</select>
	
<!-- 	해당 제품코드 등록 모달 조회 -->
	<select id="ProcessTeam" resultType="map">
		SELECT DISTINCT
		       tp.pcp_seq AS step_seq        -- 공정 순서
		       , p.prd_code					 -- 제품 코드
		       , pc.prc_id					 -- 공정 id
		       , pc.prc_nm AS process_name     -- 공정명
		       , e.emp_team_cd AS team_code    -- 팀 코드
		       , ct.det_nm AS team_name         -- 팀 이름
		  FROM product p
		  JOIN type_process tp 
		    ON p.prd_type = tp.prd_type
		  JOIN process pc 
		    ON tp.prc_id = pc.prc_id
		  JOIN code_detail cd 
		    ON pc.det_id = cd.det_id
		  LEFT JOIN employee e 
		    ON pc.det_id = e.emp_dep_cd
		  LEFT JOIN code_detail ct 
		    ON e.emp_team_cd = ct.det_id
		 WHERE p.prd_code = #{prdCd}
		   AND ct.det_nm != '공통'
		 ORDER BY tp.pcp_seq, ct.det_nm
	</select>
	
<!-- 	작업지시 등록 -->
	<insert id="workOrderInsert">
	<selectKey keyProperty="prdInfo.wrk_id" resultType="int" order="BEFORE">
        SELECT work_order_seq.NEXTVAL FROM dual
    </selectKey>
		INSERT INTO work_order (wrk_id,
								prc_id,
			    				odd_id,
			    				prd_cd,
			    				wrk_ord_date,
			    				wrk_ord_empid
		) VALUES (#{prdInfo.wrk_id},
				  #{prdInfo.prcId},         -- 공정id
			      #{prdInfo.oddId},			-- 주문 id
			      #{prdInfo.prdCd},         -- 주문 cd
			      SYSDATE + 9/24,  -- 작업 지시일
				  #{empId}
		)
	</insert>
<!-- 	작업지시 공정테이블 등록 -->
	<insert id="workProcessInsert">
		INSERT INTO work_process (wrk_id,
			    				  wpo_team,
			    				  wpo_step,
			    				  wpo_ocount,
				    			  wpo_status
		) VALUES (#{wrk_id},    
				  #{teamCode},
				  #{stepSeq},
				  ROUND(#{oddCnt} + #{oddCnt} * 0.05),
				 <choose>
		            <when test="stepSeq == 1">
		                'wpo_sts_01'
		            </when>
		            <otherwise>
		                'wpo_sts_00'
		            </otherwise>
		        </choose>
		)
	</insert>
<!--	수주detail 테이블 상태 변경-->
	<update id="updateSujuOrderSts">
		UPDATE suju_order_detail
	       SET odd_sts = 'odd_sts_03',
	       	   odd_mod_date = sysdate + (9/24)
	     WHERE odd_id = #{oddId}
	</update>
	
	<insert id="insertSujuHistory">
		INSERT INTO suju_history (odd_id,
								  odd_sts,
								  his_date,
								  emp_id
		) VALUES (#{oddId},
				  'odd_sts_03',
				  sysdate + (9/24),
				  #{empId}
		)
	</insert>
<!-- 	창고 조회	 -->
	<select id="getWarehouses" resultType="map">
		SELECT w.whs_id  -- 창고 ID
			   , w.whs_nm  -- 창고명
		       , w.whs_pc  -- 우편번호
		       , w.whs_add  -- 기본주소
		       , w.whs_da  -- 상세주소
		       , a.are_id  -- 구역 ID
		       , a.are_nm  -- 구역명
		       , a.are_max  -- 최대수량
		       , SUM(NVL(a.are_qty, 0)) AS are_cnt -- 현재수량
		  FROM warehouse w
		  JOIN area a 
		    ON w.whs_id = a.whs_id
		  LEFT JOIN warehouse_history wh 
		    ON a.are_id = wh.are_id
 		  LEFT JOIN product p 
 		    ON a.item_id = p.prd_id
		 WHERE w.whs_sts = 'whs_sts_01'  -- 가동중
		   AND a.are_type = 'area_type_02'
 		   AND p.prd_id = #{prdId} 
		 GROUP BY w.whs_id, w.whs_nm, w.whs_pc, w.whs_add, w.whs_da,
			      a.are_id, a.are_nm, a.are_max
	</select>
<!-- 	1. 창고 이력 insert -->
	<insert id="warehousesInsert">
		INSERT INTO warehouse_history (are_id,
				    				   whs_his_sts,
				    				   whs_his_cnt,
				    				   whs_his_date
		) VALUES (#{areaId},    
				  'whs_his_sts_01',
				  #{assignQty},
				  SYSDATE + (9/24)
		)
	</insert>
<!-- 	2. 재고 원장 insert -->
	<insert id="stockUpdate">
		INSERT INTO stock_ledger (item_id,
								  warehouse_id,
								  are_id,
								  inbound_at,
								  initial_cnt,
								  remaining_cnt,
								  stk_cat
		) VALUES (#{optId},
				  #{warehouseId},
				  #{areaId},
				  SYSDATE + (9/24),
				  #{assignQty}, 
				  #{assignQty},
				  'stock_cat_01'
		)
	</insert>
<!-- 	3.구역 update -->
	<update id="areaUpdate">
		UPDATE area
		   SET are_qty = are_qty + #{assignQty}
		 WHERE are_id = #{areaId}
	</update>
<!-- 	4. 구역 디테일 update -->
	<update id="areaDetailUpdate">
		UPDATE area_detail
		   SET are_det_qty = are_det_qty + #{assignQty}
		 WHERE item_id = #{optId}
		   AND are_id = #{areaId}
	</update>
<!-- 	 5. 수주 detail update -->
	<update id="sujuDetailUpdate">
		UPDATE suju_order_detail
		   SET odd_sts = 'odd_sts_06'
		 WHERE odd_id = #{oddId}
	</update>
<!-- 	6. 수주 히스토리 테이블 인서트 -->
	<insert id="sujuInserthistory">
		INSERT INTO suju_history (odd_id,
								  odd_sts,
								  his_date,
								  emp_id
		
		) VALUES (#{prdInfo.oddId},
				  'odd_sts_06',
				  SYSDATE + (9/24),
				  #{empId}
		)
	</insert>
</mapper>