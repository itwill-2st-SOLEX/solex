<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="kr.co.itwillbs.solex.vacation.VacationMapper">	
 
	<!-- with절 정의 -->
	<!-- 연차 기준일 계산, 남은 일수 계산에 사용 -->
	<sql id="empWith">
		WITH emp AS (
	    SELECT e.emp_id
	         , e.emp_nm
	         , e.emp_hire
	         , e.emp_pos_cd
	         , e.emp_dep_cd
	         , e.emp_cat_cd
	         , e.emp_team_cd
	         , ADD_MONTHS(e.emp_hire, 12 * FLOOR(MONTHS_BETWEEN(#{sysdate}, e.emp_hire) / 12)) as w1
	         , ADD_MONTHS(e.emp_hire, 12 * FLOOR(MONTHS_BETWEEN(#{sysdate}, e.emp_hire) / 12) - 1) as w2
	         , ADD_MONTHS(e.emp_hire, 12 * (FLOOR(MONTHS_BETWEEN(#{sysdate}, e.emp_hire) / 12) - 1) + 1) as w3
	         , ADD_MONTHS(e.emp_hire, 12 * (FLOOR(MONTHS_BETWEEN(#{sysdate}, e.emp_hire) / 12) + 1)) as w4
	    FROM EMPLOYEE e
		)
	</sql>
	
	<!-- 내 휴가 사용 개수 조회 -->
	<select id="getVacationSummary" resultType="map">
	 <include refid="empWith"/>
		SELECT e.emp_id, e.emp_nm, e.emp_hire, v.vac_total, v.vac_used,
		       v.vac_total - v.vac_used AS vac_remain,
		      	CASE WHEN w1 > #{sysdate}
	                 THEN w2
	                 ELSE w1
	            END AS period_start,
	            
	            CASE WHEN w1 > #{sysdate}
	                 THEN w3-1
	                 ELSE w4-1
	            END AS period_end,
	            
	            CASE WHEN w1 > #{sysdate}
	                 THEN TRUNC(w3 -#{sysdate})
	                 ELSE TRUNC(w4 - #{sysdate})
	            END AS days_left 
		  FROM emp e
		  LEFT JOIN vacation v 
		    ON e.emp_id = v.emp_id
		 WHERE e.emp_id = #{empId}
	</select>
	
	<!-- 내 연차 신청 개수 계산하기 (무한스크롤)-->
	<select id="getVacationCount">
		SELECT count(*)
		FROM ( SELECT doc_id, emp_id, doc_type, doc_sts
			   FROM document
			   WHERE doc_type = 'doc_type_01' AND doc_sts = 'doc_sts_02' AND emp_id = #{empId}
			  ) d JOIN leave_doc l ON d.doc_id = l.doc_id

	</select>
	
	<!-- 내 휴가 상세 내역 조회 -->
	<select id="getVacationDetail" resultType="map">
		SELECT d.doc_id, d.emp_id, d.doc_type, d.doc_sts, l.lea_type, l.lea_start_date, l.lea_end_date, 
			   (TO_DATE(l.lea_end_date, 'YYYY-MM-DD') - TO_DATE(l.lea_start_date, 'YYYY-MM-DD')+1) lea_used_day, l.lea_con
		FROM ( SELECT doc_id, emp_id, doc_type, doc_sts
			   FROM document
			   WHERE doc_type = 'doc_type_01' AND doc_sts = 'doc_sts_02' AND emp_id = #{empId}
			  ) d JOIN leave_doc l ON d.doc_id = l.doc_id
		ORDER BY l.lea_start_date DESC
		OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
	</select>
	
	<!-- 직급별 각 담당 직원의 연차 확인하기 -->
	<select id="getVacationList" resultType="map">
		<include refid="empWith"/>
	
		SELECT e.emp_id, ve.emp_num, e.emp_nm, e.emp_hire,
       		   v.vac_total, v.vac_used, v.vac_total - v.vac_used AS vac_remain,
       		   ve.emp_cat_nm, ve.emp_dep_nm, ve.emp_team_nm, ve.emp_pos_nm,
	           CASE
	               WHEN w1 > TO_DATE(#{sysdate}, 'YYYY-MM-DD')
	               THEN w3 - INTERVAL '1' DAY
     			   ELSE w4 - INTERVAL '1' DAY
	           END AS period_end
		FROM emp e
		 		LEFT JOIN vacation v  ON e.emp_id = v.emp_id
		        LEFT JOIN view_employee ve ON e.emp_id = ve.emp_id 
				WHERE TO_NUMBER(SUBSTR(e.emp_pos_cd, -2)) >= TO_NUMBER(SUBSTR(#{empPosCd}, -2))
					<choose>
				<!-- 팀장 조건 -->
				<when test="empTeamCd != 'team_00'">
					AND e.emp_team_cd = #{empTeamCd} AND e.emp_dep_cd = #{empDepCd}
				</when>
				<!-- 부장 조건 -->
				<when test="empDepCd != 'dep_00'">
					AND e.emp_dep_cd = #{empDepCd}
				</when>
				<!-- 이사 조건 -->
				<when test="empCatCd != 'cat_00'">
					AND e.emp_cat_cd = #{empCatCd}
				</when>
			</choose>
			<if test="keyword != null and keyword != ''">
				AND (LOWER(e.emp_nm) LIKE '%' || LOWER(#{keyword}) || '%'
				OR LOWER(e.emp_num) LIKE '%' || LOWER(#{keyword}) || '%')
			</if>
		ORDER BY e.emp_dep_cd, e.emp_team_cd, e.emp_pos_cd
		OFFSET #{offset} ROWS FETCH NEXT #{size} ROWS ONLY
	</select>
	
	<!-- 직급별 직원 총 인원수 세기(무한스크롤) -->
	<select id="getVacationAllCount">
		SELECT count(*)
		FROM vacation v RIGHT JOIN employee e ON v.emp_id = e.emp_id
                JOIN view_employee ve ON e.emp_id = ve.emp_id 
		WHERE TO_NUMBER(SUBSTR(e.emp_pos_cd, -2)) > TO_NUMBER(SUBSTR(#{empPosCd}, -2))
			<choose>
				<!-- 팀장 조건 -->
				<when test="empTeamCd != 'team_00'">
					AND e.emp_team_cd = #{empTeamCd} AND e.emp_dep_cd = #{empDepCd}
				</when>
				<!-- 부장 조건 -->
				<when test="empDepCd != 'dep_00'">
					AND e.emp_dep_cd = #{empDepCd}
				</when>
				<!-- 이사 조건 -->
				<when test="empCatCd != 'cat_00'">
					AND e.emp_cat_cd = #{empCatCd}
				</when>
				<!-- 사장 조건 -->
				<when test="empPosCd = 'pos_01'">
					
				</when>
			</choose>
			<if test="keyword != null and keyword != ''">
				AND (LOWER(e.emp_nm) LIKE '%' || LOWER(#{keyword}) || '%'
				OR LOWER(e.emp_num) LIKE '%' || LOWER(#{keyword}) || '%')
			</if>
	</select>
	
	<!-- 로그인한 사용자의 직급, 부서, 팀 등의 정보 가져오기 -->
	<select id="getEmployeeInfo">
		SELECT emp_id, emp_cat_cd, emp_dep_cd, emp_team_cd, emp_pos_cd
		FROM employee
		WHERE EMP_ID = #{empId}
	</select>
 </mapper>
  
  
  
  
  
  