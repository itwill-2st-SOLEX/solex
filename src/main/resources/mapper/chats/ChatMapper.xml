<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.itwillbs.solex.chats.ChatMapper">
<!-- 	사원 목록 조회 -->
	<select id="getEmpList" resultType="map">
		SELECT emp_nm
			   , emp_num AS emp_cd
		       , pos.det_nm AS pos
		       , dep.det_nm AS dep
		  FROM employee e
		  JOIN code_detail pos
		    ON e.emp_pos_cd = pos.det_id
		  JOIN code_detail dep
		    ON e.emp_dep_cd = dep.det_id
	</select>
<!-- 	대화 목록 조회 -->
	<select id="getChatList" resultType="map">
		SELECT send.emp_nm AS sender_nm
		       , re.emp_nm AS receiver_nm
	       	   , m.SENDER_ID AS sender_id
    		   , m.RECEIVER_ID AS receiver_id
		       , CONTENT AS last_message
 		  FROM messenger m
		  JOIN employee send
		    ON m.sender_id = send.emp_num
		  JOIN employee re
		    ON m.receiver_id = re.emp_num
		 WHERE m.MSG_ID IN (
		        SELECT MAX(MSG_ID)
		        FROM messenger
		        WHERE sender_id = #{empNum} OR receiver_id = #{empNum}
		        GROUP BY 
		            CASE 
		                WHEN SENDER_ID = #{empNum} THEN RECEIVER_ID
		                ELSE SENDER_ID
		            END
		       )
		ORDER BY SENT_AT DESC
	</select>
<!-- 	채팅방 메세지 불러오기 -->
	<select id="getChatHistory" resultType="map">
		SELECT sender_id
		       , receiver_id
		       , content
		       , TO_CHAR(sent_at, 'YYYY-MM-DD HH24:MI') AS SENT_TIME
		  FROM messenger
		 WHERE (sender_id = #{empNum} AND receiver_id = #{partnerId})
		    OR (sender_id = #{partnerId} AND receiver_id = #{empNum})
		 ORDER BY sent_at ASC
	</select>
    
<!--     메세지 저장 -->
	<insert id="saveMessage">
		INSERT INTO messenger (msg_id, 
							   sender_id,
							   receiver_id,
							   room_id,
							   content
		) VALUES (
		  SEQ_MSG_ID.NEXTVAL,
		  #{sender},
		  #{receiver},
		  #{roomId},
		  #{content}
		)
		</insert>
</mapper>	