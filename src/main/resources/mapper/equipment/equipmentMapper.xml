<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.itwillbs.solex.equipment.EquipmentMapper">

	<select id="getEquipmentName" resultType="Map">
	  	SELECT
			eq.eqp_id as id,
			eq.eqp_name as nm
		FROM equipment eq
	    ORDER BY eq.eqp_id asc
	</select>
	
  	<select id="selectPagedEquipmentDataAsMap" parameterType="Map" resultType="Map">
  	SELECT
		cli.cli_nm as CLI_NM,
		eq.eqp_code as EQP_CODE,
		eq.eqp_name as EQP_NAME,
		eq.eqp_comm as EQP_COMM,
		eq.eqp_price as EQP_PRICE,
		eq.eqp_sts as EQP_STS,
		TO_CHAR(eq.eqp_purchase_date, 'YYYY-MM-DD') AS EQP_PURCHASE_DATE,
		TO_CHAR(eq.eqp_installation_date, 'YYYY-MM-DD') AS EQP_INSTALLATION_DATE,
		prc.prc_nm as PRC_NM
	FROM equipment eq
	left JOIN client cli ON eq.cli_id = cli.cli_id	
	left JOIN process prc ON eq.prc_id = prc.prc_id
    ORDER BY eq.eqp_id asc
    OFFSET #{offset} ROWS
    FETCH NEXT #{limit} ROWS ONLY
	</select>

	<select id="getProcessList" resultType="Map">
	SELECT
		prc.prc_id as PRC_ID,
		prc.prc_nm as PRC_NM
	FROM process prc
	ORDER BY prc.prc_id asc
	</select>

	<select id="getClientList" resultType="Map">
	SELECT 
		cli.cli_id as CLI_ID,
		cli.cli_nm as CLI_NM
	FROM client cli
	WHERE cli.cli_type = 'client_cat_03'
	ORDER BY cli.cli_id asc
	</select>



	<!-- 설비 생성 -->
	<insert id="createEquipment" parameterType="Map">
		<selectKey keyProperty="eqp_code_num" resultType="int" order="BEFORE">
			SELECT EQP_CODE_SEQ.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO equipment (
			eqp_code,
			eqp_name,
			eqp_comm,
			eqp_price,
			eqp_sts,
			eqp_purchase_date,
			eqp_installation_date,
			prc_id,
			cli_id,
			emp_team
		) VALUES (
			'EQ' || LPAD(#{eqp_code_num}, 3, '0'),
			#{eqp_name},
			#{eqp_comm},
			#{eqp_price},
			#{eqp_sts},
			#{eqp_purchase_date},
			#{eqp_installation_date},
			#{prc_id},
			#{cli_id},
			#{team_id}
		)
	</insert>


	<!-- 설비 상세 조회 -->
	<select id="getEquipmentDetail" parameterType="String" resultType="Map">
	SELECT
		eqp.eqp_id as EQP_ID,
		eqp.eqp_code as EQP_CODE,
		eqp.eqp_name as EQP_NAME,
		eqp.eqp_comm as EQP_COMM,
		eqp.eqp_price as EQP_PRICE,
		eqp.eqp_sts as EQP_STS,
		eqp.emp_team as TEAM_ID,

		TO_CHAR(eqp.eqp_purchase_date, 'YYYY-MM-DD') AS EQP_PURCHASE_DATE,
		TO_CHAR(eqp.eqp_installation_date, 'YYYY-MM-DD') AS EQP_INSTALLATION_DATE,
		prc.prc_nm as PRC_NM,
		cli.cli_nm as CLI_NM,
		cli.cli_id as CLI_ID,
		prc.prc_id as PRC_ID,
		cd.det_nm as TEAM_NAME
	FROM equipment eqp
	left JOIN process prc ON eqp.prc_id = prc.prc_id	
	left JOIN client cli ON eqp.cli_id = cli.cli_id
	left join code_detail cd on cd.det_id = eqp.emp_team
	WHERE eqp.eqp_code = #{eqp_code}
	</select>


	<!-- 설비 수정 -->
	<update id="updateEquipment" parameterType="Map">
		UPDATE equipment
		SET 
			eqp_name = #{eqp_name},
			eqp_comm = #{eqp_comm},
			eqp_price = #{eqp_price},
			eqp_sts = #{eqp_sts},
			eqp_purchase_date = #{eqp_purchase_date},
			eqp_installation_date = #{eqp_installation_date},
			emp_team = #{team_id},
			prc_id = #{prc_id},
			cli_id = #{cli_id}
		WHERE eqp_code = #{eqp_code}
	</update>



	<!-- 팀 조회 -->
	<select id="getTeam" resultType="Map">
	select 
		distinct 
		e.emp_team_cd as team_cd,
		d.det_nm as team_nm
		
	from process p 
	left join employee e on e.emp_dep_cd = p.det_id 
	left join code_detail d on d.det_id = e.emp_team_cd
	where prc_id = #{processId}
	and d.det_nm not in ('공통')
	order by emp_team_cd asc
	</select>
	
  
  
</mapper>
